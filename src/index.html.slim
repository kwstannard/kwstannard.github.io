head
  link rel="stylesheet" href="monospace.css"

  css:
    body {
      max-width: 1000px;
      margin: auto;
    }
    h1 {
      text-align: center;
    }
    #pizzazz {
      display: flex;
      justify-content: center;
      align-items: center;
    }
    img {
      z-index: -100;
      padding: 20px;
      max-height: 300px;
    }
    .section {
      padding: 2em;
    }
    .log-circle {
      position: absolute;
      border-color: var(--text-color);
      border-style: solid;
      transform: translate(-50%, -50%);
      top: 50%;
      left: 50%;
      border-radius:50%;
    }
    #log-circle-1 {
      border-width: 5px;
      padding: 1em;
      
    }
    #log-circle-2 {
      border-width: 5px;
      padding: 4em;
    }

    #log-circle-3 {
      border-width: 5px;
      padding: 8em;
    }
    .relative {
      position: relative;
    }


  javascript:
    const pizzazzStyle = document.createElement("style")
    document.head.appendChild(pizzazzStyle)

    var inc = 0;
    var direction = "up";

    var sizeMax = 900;
    var incmax=1200
    var sizeInhibitor = 0.1;
    var inc1 = 10;
    var inc2 = incmax / 3 + 1 ;
    var inc3 = incmax * 2 / 3 + 1;
    var size1, size2, size3;

    iid=setInterval(
      () => {
        if (inc > 50) { direction = "down" }
        if (inc < -50) { direction = "up" }

        if (direction == "up") { inc++ }
        if (direction == "down") { inc-- }

        inc1++
        inc2++
        inc3++
        if (inc1 > incmax) { inc1 = 10 }
        if (inc2 > incmax) { inc2 = 10 }
        if (inc3 > incmax) { inc3 = 10 }
        size1 = Math.log(inc1 * sizeInhibitor) / Math.log(1.01) / 10
        size2 = Math.log(inc2 * sizeInhibitor) / Math.log(1.01) / 10
        size3 = Math.log(inc3 * sizeInhibitor) / Math.log(1.01) / 10

        pizzazzStyle.textContent = "#rizzo { transform: rotate("+(inc/10)+"deg) }\n"+
          "#fozzy { transform: rotate("+(inc/10*-1)+"deg) }\n" +
          "#log-circle-1 { padding: "+size1+"px; border-width: "+size1/13+"px; }\n" +
          "#log-circle-2 { padding: "+size2+"px; border-width: "+size2/13+"px; }\n" +
          "#log-circle-3 { padding: "+size3+"px; border-width: "+size3/13+"px; }\n"
      },
      10
    )
body
  .section
    h1 Wolf's Corner
    #pizzazz
      img#fozzy src="fozzy.jpg"
      img#rizzo src="rizzo.jpg"
  .section
    h1 About the Author
    p
      |
        Father. International nerd of mystery. Diasporish. Karaoke enthusiast.
        Board game haver. Problem eraser. Urbanophile. Collaborative
        contributor. Any opinions stated here represent the opinions of your
        cats.
  .section
    h1 Cool Code Collection
    table
      tr
        th Project
        th Details
        th Links
        th Art
      tr
        td Rails Engines as First Class Citizens Project
        td
          |
            Rails Engines suck because Rails has so many hard-coded references
            to ActiveRecord::Base. With work we could remove the hard-coded
            references and allow Rails Engines to become fully isolated from
            everything else. This would mean they could own their configs, own
            their database connections, and own their migrations. This will
            provide missing waypoints between a monolith and distributed
            services, allowing much easier integration testing and iteration on
            design.
        td
          p
            a href="https://github.com/kwstannard/EngineFirst" Proof of Concept.
          p
            a href="https://github.com/rails/rails/pulls/kwstannard" Latest attempts to upstream.
        td.relative
          .log-circle#log-circle-1
          .log-circle#log-circle-2
          .log-circle#log-circle-3

      tr
        td Pry-Rails
        td Utilized Docker to test Pry-Rails against a matrix of Ruby and Rails versions.
        td 
          a href="https://github.com/pry/pry-rails/pull/135" pry-rails/pull/135
        td
          pre
            code ≽^•⩊•^≼
      tr
        td dotenv implementation
        td
          |
            A 9 line dotenv implementation I made. It does the standard dotenv things and also does
            parent directory walk. Useful for having multiple projects or apps for a single
            organization. My use case was to have a work directory containing .env files with
            common values and also work repositories.
        td 
          a href="https://github.com/kwstannard/kws-scripts-and-configs/blob/master/bin/de" de
        td
          strong
            pre
              code
                |
                  \ /\ /\ /\ /
                   X  X  X  X
                  / \/ \/ \/ \

